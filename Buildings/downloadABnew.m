% downloadABnew.m 

%NOTE: GHG emissions some values read as text from excel so made NaN if you
%intend to use must go back to excel file and make all #s then re-run

% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/avawaitz/Dropbox/AvaProject/Data/Buildings/AnalyzeBoston-unmodified.xlsx
%    Worksheet: rawData
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/07/25 13:42:21
function downloadABnew(filename,sheet,savefilename)
% Import the data
filepath = '/Users/avawaitz/Dropbox/AvaProject/Data/Buildings/';
[~, ~, raw] = xlsread(fullfile(filepath,filename),sheet);
raw = raw(2:end,:);
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[2,3,4,5,6,10,11,20,21,22]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,7,8,9,12,13,14,15,16,17,18,19,23,24]);

% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

% Create output variable
data = reshape([raw{:}],size(raw));

% Create table
AnalyzeBoston = table;

% Allocate imported array to column variable names
AnalyzeBoston.id = data(:,1);
AnalyzeBoston.PropertyName = stringVectors(:,1);
AnalyzeBoston.Reported = categorical(stringVectors(:,2));
AnalyzeBoston.PropertyType = categorical(stringVectors(:,3));
AnalyzeBoston.Address = stringVectors(:,4);
AnalyzeBoston.ZIP = categorical(stringVectors(:,5));
AnalyzeBoston.GrossAreasqft = data(:,2);
AnalyzeBoston.SiteEUIkBTUsf = data(:,3);
AnalyzeBoston.EnergyStarScore = data(:,4);
AnalyzeBoston.EnergyStarCertified = stringVectors(:,6);
AnalyzeBoston.PropertyUses = stringVectors(:,7);
AnalyzeBoston.YearBuilt = data(:,5);
AnalyzeBoston.GHGEmissionsMTCO2e = data(:,6);
AnalyzeBoston.GHGIntensitykgCO2sf = data(:,7);
AnalyzeBoston.TotalSiteEnergykBTU = data(:,8);
AnalyzeBoston.Electricity = data(:,9);
AnalyzeBoston.Gas = data(:,10);
AnalyzeBoston.Steam = data(:,11);
AnalyzeBoston.WaterIntensitygalsf = data(:,12);
AnalyzeBoston.OnsiteRenewablekWh = stringVectors(:,8);
AnalyzeBoston.UserSubmittedInfo = stringVectors(:,9);
AnalyzeBoston.UserSubmittedLink = stringVectors(:,10);
AnalyzeBoston.TaxParcel = data(:,13);
AnalyzeBoston.YearsReported = data(:,14);

% Clear temporary variables
clearvars data raw stringVectors R;
% Convert to Struct
ABStruct = table2struct(AnalyzeBoston);
% Save to file
save(savefilename,'ABStruct');
end